# ------------ OCSP responder configuration ---------------------
# These configurations are used both for EJBCA and the Validation Authority (VA).

# OCSP servlet enabled. If false there will be no servlet.
# Default is true.
#ocsp.enabled=false

# Context root (the path in the URL)
# Default is '/${app.name}/publicweb/status'
#ocsp.contextroot=/status

# Specifies the subject of a certificate which is used to identify the 
# responder which will generate responses when no real CA can be found from the request. 
# This is used to generate 'unknown' responses when a request is received for a certificate 
# that is not signed by any CA on this server. Recommended to use same as ca.dn.
#
# For the internal OCSP responder this is the subject DN of the CA to use for signing
# For an external OCSP responder this is the issuer DN of the OCSP responders certificate to use for signing, i.e. the CAs subject DN.
# Default: CN=AdminCA1,O=EJBCA Sample,C=SE
ocsp.defaultresponder=CN=AdminCA1,O=EJBCA Sample,C=SE

# If set to false the OCSP responses will only contain the signature certificate, and not the whole certificate chain of the OCSP responder. 
# Default true.
#ocsp.includecertchain=true

# Defines the ResponderID type as defined in RFC2560. Set to name for the Name type and keyhash for the KeyHash type.
# Possible values: name, keyhash
# Default: keyhash 
#ocsp.responderidtype=keyhash

# Specifies which signature algorithms should be used on OCSP responses. You can specify several algorithm
# separated by ';'. If RSA keys are used in the OCSP signing certificate, the algorithm with RSA will be used, and
# if ECDSA keys are used in the OCSP signing certificate, the algorithm with ECDSA will be used and if 
# DSA keys are used in the OCSP signing certificate, the algorithm with DSA will be used.
#
# Default: SHA1WithRSA;SHA1WithECDSA;SHA1WithDSA
#ocsp.signaturealgorithm=SHA1WithRSA;SHA1WithECDSA;SHA1WithDSA

# The interval on which the the OCSP signing certificates are updated in seconds.
# If set to 0 or negative these certificate are never updated.
# Default: 300
#ocsp.signingCertsValidTime=0

# When a signing certificate is about to expire a WARN message could be written to log4j each time the key of the certificate is used.
# This property defines when this message is started to be written.
# The property is set to the number of seconds before the expiration that the WARN message starts to be written.
# If set to 0 the warning is disabled.
# Default: 604800 (1 week)
#ocsp.warningBeforeExpirationTime=10000

# Specifies if the OCSP-responder should require signed requests or not.
# If signature is required, the signature certificate must be issued by a CA handled by the OCSP responder.
#
# Default: false
#ocsp.signaturerequired=false

# Specifies if the OCSP-responder should require signatures to be issued by a list of allowed CA's.
#
# Default: false
#ocsp.restrictsignatures=false

# Specifies how to restrict OCSP-request signatures.
# 'issuer' means that the OCSP-responder will require signatures to be issued by a CA in a list of allowed CA's.
# 'signer' means that the OCSP-responder will require signatures to be in a list of allowed signatures.
# Note that unless ocsp.restrictsignatures is set to true this variable will not be used.
#
# Default: issuer
#ocsp.restrictsignaturesbymethod=issuer

# Specifies a directory with CA's which are allowed
# If signatures are restricted and required only requests signed by a certificate issued by a CA in this directory is accepted.
# The easiest here is to configure the full path of the directory, otherwise it will be relative to some directory where you start you app server. 
#
#ocsp.signtrustdir=signtrustdir

# Specifies an interval in seconds in which the server reloads certificates from the 'ocsp.signtrustdir'
# if this variable is set to 0 certificates will not be reloaded after startup.
#
# Default: 180
#ocsp.signtrustvalidtime=180


# If true a certificate that does not exist in the database, but is issued by a CA the responder handles
# will be treated as not revoked. Default (when value is true) is to treat is as "unknown".
# This is useful if you want an External OCSP responder database to only contain revoked certificates, and not
# all certificates.
#
# Default: false
#ocsp.nonexistingisgood=false

# The value of 'ocsp.nonexistingisgood=false' may be overridden if the URL that the client used to send the request is matching some regular expression.
# The regular expressions that if any of them is fulfilled will override 'ocsp.nonexistingisgood=false' is numbered from 1 and up. It may be any numbers.
# Here follows an example of 2:
#ocsp.nonexistingisgood.uri.1=.*/thisEndingIsGood$
#ocsp.nonexistingisgood.uri.2=^http://good.myhost.nu:8080/.*

# The value of 'ocsp.nonexistingisgood=true' may be overridden if the URL that the client used to send the request is matching some regular expression.
# The regular expressions that if any of them is fulfilled will override 'ocsp.nonexistingisgood=true' is numbered from 1 and up. It may be any numbers.
# Here follows an example of 2:
#ocsp.nonexistingisbad.uri.1=.*/thisEndingIsBad$
#ocsp.nonexistingisbad.uri.2=^http://bad.myhost.nu:8080/.*

# For HTTP get requests according to RFC5019 we can set HTTP headers in the response to allow caching proxies to cache responses.
# untilNextUpdate is the number of seconds a response will be valid. 0 = disable.
# Default: 0
#ocsp.untilNextUpdate = 0

# You can also specify different nextUpdate values depending on which certificate profiles the certificate was issued by.
# This only works when you have published using EJBCA 3.9.0 or later, where the certificateProfileId column in the CertificateData table is populated.
# You can find the certificateProfileId (999 in the example below) in the admin GUI.
# If no specific certificateProfileId is specified the default value from ocsp.untilNextUpdate is used.
#ocsp.999.untilNextUpdate = 50

# For HTTP get requests according to RFC5019 we can set HTTP headers in the response to allow caching proxies to cache responses.
# maxAge is how long a response will be cached, in seconds. Should be less than untilNextUpdate.
# Ignored if untilNextUpdate is disabled. 0 = disable.
# Default: 30
#ocsp.maxAge = 30

# You can also specify different maxAge values depending on which certificate profiles the certificate was issued by.
# This only works when you have published using EJBCA 3.9.0 or later, where the certificateProfileId column in the CertificateData table is populated.
# You can find the certificateProfileId (999 in the example below) in the admin GUI.
# If no specific certificateProfileId is specified the default value from ocsp.maxAge is used.
#ocsp.999.maxAge = 100

# Specifies OCSP extension oids that will result in a call to an extension class, 
# separate multiple entries with ;"
# Leave out if you do not know what this is.
# Example value: 2.16.578.1.16.3.2
# Default: nothing 
#ocsp.extensionoid=

# Specifies classes implementing OCSP extensions matching oids above, 
# separate multiple entries with ;"
# Leave out if you do not know what this is.
# Example value: org.ejbca.core.protocol.ocsp.OCSPUnidExtension
# Default: nothing
#ocsp.extensionclass=

# Datasource for Unid-Fnr mapping OCSP extension. 
# Leave out if you do not know what this is.
# No default value, must be set if the extension is used
#ocsp.uniddatsource=

# Directory containing certificates of trusted entities allowed to query for Fnrs. 
# Leave out if you do not know what this is.
# No default value, must be set if the extension is used
#ocsp.unidtrustdir=

# File containing the CA-certificate, in PEM format, that signed the trusted clients. 
# Leave out if you do not know what this is.
# No default value, must be set if the extension is used
#ocsp.unidcacert=

# If you are not using SSL on the external OCSP responder (normally not needed for OCSP), you should define
# this property, e.g. remove the comment sign. See 'Configuring TLS on the Unid lookup server' in the Howto.
# Note! If defining this property on the EJBCA server, SSL will not be configured there either, and the admin-GUI will not work.
#j2ee.web-noconfigure=true


#------------------- Custom signer used by external OCSP responder------------------------------
# The used token is referred to as "card" since smart card was the first (and is the only) token a custom signer has been implemented for.

# Directory of classes implementing hardware signing of the OCSP response
# Default ./ocspHardTokenClasses
#ocsp.hardToken.classes=../primeCard/ocspHardTokenClasses-1.6

# The class that implements card signing of the OCSP response
# Default: se.primeKey.caToken.card.CardKeysImpl
#ocsp.hardToken.className=se.primeKey.caToken.card.CardKeysImpl

# The password for keys stored on card.
# Default: null
#ocsp.keys.cardPassword=foo123


#------------------- Soft keys used by external OCSP responder------------------------------

# Directory containing soft keys or certificates for keys on cards. The soft keys are in jks or p12 format.
# The certificates of the cards keys are in pem format. All CAs using the OCSP responser must have a soft
# key or a certificate to a card key in this directory.
# Normally as with the default value, the target directory is actually JBOSS_HOME/bin/keys if started in JBOSS_HOME.
# Default: ./keys
#ocsp.keys.dir=./keys

# The password to all soft keystores.
# Default: null
#ocsp.keys.storePassword=foo123

# The password for the all the soft keys of the OCSP responder. All keys must have the same password.
# Note that the key password must be specified even if the activation feature is used.
# If the keystore is created by EJBCA then this password is equal to ocsp.keys.storePassword.
# If it is equal you may leave it empty if ocsp.keys.storePassword is defined.
# Default: same as ocsp.keys.storePassword if not null otherwise empty.
#ocsp.keys.keyPassword=foo123


#------------------- PKCS#11 keys used by external OCSP responder------------------------------
# Note that the PKCS#11 keys will not be updated by the periodical update defined by 'ocsp.signingCertsValidTime' method
# if 'ocsp.rekeying.wsurl' or 'ocsp.activation.doNotStorePasswordsInMemory' is defined.

# P11 shared library path name. 
# Must not be used if ocsp.p11.sunConfigurationFile is used.
# Default: empty
#ocsp.p11.sharedLibrary=/opt/nfast/toolkits/pkcs11/libcknfast.so

# Sun P11 Configuration file (see Admin Guide for examples). 
# Must be used instead of 'ocsp.p11.sharedLibrary' if the feature 'rekeying' is used.
# Default: empty
#ocsp.p11.sunConfigurationFile=/home/ejbca/ocs4.cfg

# P11 password.
# Default: null
#ocsp.p11.p11password=foo123

# P11 slot number. Prefix with 'i' to indicate index in list.
# Default: i1
#ocsp.p11.slot=i1


#------------------- Re-keying used by external OCSP responder------------------------------
# When this feature is enabled a new signing key will automatically be generated a specified time before the certificate of the used key expires.
# A certificate for the new key will be fetched by WS from EJBCA.

# URL to webservice from which the certificate for a newly generated OCSP responder key should be fetched.
# The re-keying feature is disabled if this property is not defined.
# Default: null
#ocsp.rekeying.wsurl = https://milton:8443/ejbca/ejbcaws/ejbcaws

# Renew time before certificate expires. Specifies how long time before a certificate expires that a new key should be generated. <0 means that no keys are automatically generated.
# Default: -1 
#ocsp.rekeying.renewTimeBeforeCertExpiresInSeconds=86400

# Keystore of soft key and certificate to be used as the SSL WS client when connecting to EJBCA.
# Do not define this property if you want to use the HSM to store the client WS key.
# If not defined a key in the used P11 slot will be used as client key.
# The certificate of the P11 key must have "Key usage" set to "Digital Signature" and "Extended Key Usage" set to "Client Authentication".
# Default: null
#ocsp.rekeying.swKeystorePath = wsKeyStore.jks

# The password of the SW keystore defined above.
# Default: null
#ocsp.rekeying.swKeystorePassword = foo123

# Limits the available keys on the slot to those defined in this list.
# The aliases are separated by ';'.
# Use this if you have several responders charing the same HSM and want each responder to have its own keys.
# Using this makes it possible to have rekeying running on all responders.
# Do not define this property if you want to use all available keys.
# Default: null
#ocsp.rekeying.listOfAliases=reponder2key1;responder2key2;responder2key3

# Host from which a triggering of rekey is allowed separated by ';'
# Default: 127.0.0.1;0:0:0:0:0:0:0:1
#ocsp.rekeying.trigging.hosts=127.0.0.1;192.168.0.3

# Password for triggering the rekey.
# Not specified (null) means that rekey can not be triggered with http get
# Default is that rekey triggering is disabled.
#ocsp.rekeying.trigging.password=foobar123


#------------------- External OCSP responder activation------------------------------
# 'ocsp.keys.storePassword' and 'ocsp.p11.p11password' and 'ocsp.keys.cardPassword' should not be defined if you are using the activation feature.
# 

# This property defines whether the passwords should be stored in memory or not.
# 
# Default: false
#ocsp.activation.doNotStorePasswordsInMemory=true


#------------------- OCSP Logging settings -------------
# Transaction logging logs summary lines for all OCSP request/responses, which can be used for charging clients if you are running a commercial OCSP service.
# Specifies if transaction logging should be performed from the OCSP responder and formats how that information should be logged yyyy-MM-dd:HH:mm:ss
# Change below to true if you want transaction information to be logged
#
# See the OCSP installation guide for more details on the transaction and audit logging.
#
# Default: false
#ocsp.trx-log = true

# Configure how time of logging in auditlog will be output
# Default: yyyy-MM-dd:HH:mm:ss:z
#ocsp.log-date = yyyy-MM-dd:HH:mm:ss:z

# Configure which time zone will be used for logging
# Default: GMT
#ocsp.log-timezone = GMT

# A pattern for use with ocsp.trx-log-order to replace constants with values during logging
# Default: \\$\\{(.+?)\\}
#ocsp.trx-log-pattern = \\$\\{(.+?)\\}

# Use ocsp.trx-log-order to specify what information should be logged and in what order. You can also configure what characters you want in between
# See OCSP Installation guide for documentation of all parameters.
# Default: ${SESSION_ID};${LOG_ID};${STATUS};${REQ_NAME}"${CLIENT_IP}";"${SIGN_ISSUER_NAME_DN}";"${SIGN_SUBJECT_NAME}";${SIGN_SERIAL_NO};"${LOG_TIME}";${REPLY_TIME};${NUM_CERT_ID};0;0;0;0;0;0;0;"${ISSUER_NAME_DN}";${ISSUER_NAME_HASH};${ISSUER_KEY};${DIGEST_ALGOR};${SERIAL_NOHEX};${CERT_STATUS}
#ocsp.trx-log-order = ${SESSION_ID};${LOG_ID};${STATUS};${REQ_NAME}"${CLIENT_IP}";"${SIGN_ISSUER_NAME_DN}";"${SIGN_SUBJECT_NAME}";${SIGN_SERIAL_NO};"${LOG_TIME}";${REPLY_TIME};${PROCESS_TIME};${NUM_CERT_ID};0;0;0;0;0;0;0;"${ISSUER_NAME_DN}";${ISSUER_NAME_HASH};${ISSUER_KEY};${DIGEST_ALGOR};${SERIAL_NOHEX};${CERT_STATUS}

# Audit logging logs the complete requests and responses, which can be used to trace complete transaction afterwards.
# change ocsp.audit-log to true of you want audit logging turned on
# Default: false
#ocsp.audit-log = true

# A pattern for use with ocsp.audit-order to replace constants with values during logging
# Default: \\$\\{(.+?)\\}
#ocsp.audit-log-pattern = \\$\\{(.+?)\\}

# Use ocsp.audit-log-order to specify what information should be logged and in what order. You can also configure what characters you want in between
# See OCSP Installation guide for documentation of all parameters.
# Default: ocsp.audit-log-order = SESSION_ID:${SESSION_ID};LOG ID:${LOG_ID};"${LOG_TIME}";TIME TO PROCESS:${REPLY_TIME};\nOCSP REQUEST:\n"${OCSPREQUEST}";\nOCSP RESPONSE:\n"${OCSPRESPONSE}";\nSTATUS:${STATUS}
#ocsp.audit-log-order = SESSION_ID:${SESSION_ID};LOG ID:${LOG_ID};"${LOG_TIME}";REPLY TIME:${REPLY_TIME};\nTIME TO PROCESS:${PROCESS_TIME};\nOCSP REQUEST:\n"${OCSPREQUEST}";\nOCSP RESPONSE:\n"${OCSPRESPONSE}";\nSTATUS:${STATUS}

# Set to true if you want transactions to be aborted when logging fails
# This option needs other configuration changes as well, see HOWTO-OCSP-RESPONDER for more information
# Default: false
#ocsp.log-safer = true
