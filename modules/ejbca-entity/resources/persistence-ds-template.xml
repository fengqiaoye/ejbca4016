<?xml version="1.0" encoding="UTF-8"?>
<persistence version="1.0"
    xmlns="http://java.sun.com/xml/ns/persistence"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd"
    >
    <persistence-unit name="ejbca" transaction-type="JTA">
        <provider>org.hibernate.ejb.HibernatePersistence</provider>
        <jta-data-source>${datasource.jndi-name-prefix}${datasource.jndi-name}</jta-data-source>        
        <properties>
            <property name="hibernate.dialect" value="${hibernate.dialect}"/>
            <!--
            	We don't want Hibernate to go and change the database schema on it's own initiative, since we still use
            	manual upgrade scripts. But we do want to create a database schema if this is a fresh install.
            	It would be nice if we could drop manual schema changes and just let Hibernate update the schema...
            -->
            <property name="hibernate.hbm2ddl.auto" value="update"/> <!-- validate | update | create | create-drop -->
            <property name="hibernate.query.jpaql_strict_compliance" value="true"/>
            <!-- Enabled when bundling Hibernate on Weblogic .. ${persistence.enable-weblogic-jta-lookup1}
            <property name="hibernate.transaction.manager_lookup_class" value="org.hibernate.transaction.WeblogicTransactionManagerLookup"/>
            ${persistence.enable-weblogic-jta-lookup2} -->
            <!-- Enabled when bundling Hibernate on Websphere ..
                 java.sql.Connection.TRANSACTION_READ_COMMITTED = 2
             ${persistence.enable-websphere-jta-lookup1}
            <property name="hibernate.transaction.manager_lookup_class" value="org.hibernate.transaction.WebSphereTransactionManagerLookup"/>
            <property name="hibernate.connection.isolation" value="2"/>
            ${persistence.enable-websphere-jta-lookup2} -->
        </properties>
    </persistence-unit>
</persistence>
